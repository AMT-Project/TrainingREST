openapi: '3.0.3'
info:
  version: '0.1.0'
  title: Fruits API
  description: An API to demonstrate Swagger and Spring Boot
security:
  #  - bearerAuth: []
  - apiKeyAuth: [ ]
paths:
  /badges:
    post:
      description: create a badge
      operationId: createBadge
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Badge'
      responses:
        '201':
          description: created
    get:
      description: get the list of all badges
      operationId: getBadges
      responses:
        '200':
          description: success
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Badge'
  /badges/{id}:
    get:
      description: get one badge, by id
      operationId: getBadge
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: success
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Badge'
  /events:
    post:
      description: create an event
      operationId: createEvent
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Event'
      responses:
        '201':
          description: created
components:
  securitySchemes:
    #    bearerAuth:            # arbitrary name for the security scheme
    #      type: http
    #      scheme: bearer       # warning: it HAS TO be a lowercase b for the swagger ui version used in springfox
    #      bearerFormat: JWT    # optional, arbitrary value for documentation purposes
    apiKeyAuth:
      type: apiKey
      in: header
      name: X-API-KEY
  schemas:
    Badge:
      type: object
      properties:
        badgeId:
          type: string
        name:
          type: string
        description:
          type: string
    Event:
      type: object
      properties:
        userId:
          type: string
        timestamp:
          type: string
          format: date-time
        type:
          type: string
        properties:
          type: object
          properties:
            type:
              type: string
            quantity:
              type: integer
